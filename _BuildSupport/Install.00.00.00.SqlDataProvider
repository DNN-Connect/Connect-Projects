/******* TABLES *******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_Projects') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}{objectQualifier}Connect_Projects_Projects(
 [ProjectId] [int] IDENTITY(1,1) NOT NULL,
 [ModuleId] [int] NOT NULL,
 [Visible] [bit] NOT NULL,
 [ProjectName] [nvarchar](1000) NOT NULL,
 [ProjectType] [int] NOT NULL,
 [Url1] [nvarchar](500) NULL,
 [Url2] [nvarchar](500) NULL,
 [Status] [nvarchar](500) NULL,
 [Owners] [nvarchar](1000) NULL,
 [Aims] [nvarchar](max) NULL,
 [Description] [nvarchar](max) NULL,
 [Dependencies] [nvarchar](max) NULL,
 [CreatedByUserID] [int] NOT NULL,
 [CreatedOnDate] [datetime] NOT NULL,
 [LastModifiedByUserID] [int] NOT NULL,
 [LastModifiedOnDate] [datetime] NOT NULL,
 CONSTRAINT PK_{objectQualifier}Connect_Projects_Projects PRIMARY KEY CLUSTERED 
(
 [ProjectId] ASC
)WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_ProjectTypes') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}{objectQualifier}Connect_Projects_ProjectTypes(
 [ProjectTypeId] [int] IDENTITY(1,1) NOT NULL,
 [TypeDescription] [nvarchar](300) NOT NULL,
 [ProjectColor] [varchar](10) NOT NULL,
 CONSTRAINT PK_{objectQualifier}Connect_Projects_ProjectTypes PRIMARY KEY CLUSTERED 
(
 [ProjectTypeId] ASC
)WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO

/******* STRUCTURE *******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_Projects_Projects_ProjectTypes') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_Projects'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_Projects_Projects  WITH CHECK ADD  CONSTRAINT FK_{objectQualifier}Connect_Projects_Projects_ProjectTypes FOREIGN KEY([ProjectType])
REFERENCES {databaseOwner}{objectQualifier}Connect_Projects_ProjectTypes ([ProjectTypeId])
ON DELETE CASCADE
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_Projects_Projects_ProjectTypes') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_Projects'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_Projects_Projects CHECK CONSTRAINT FK_{objectQualifier}Connect_Projects_Projects_ProjectTypes
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_Projects_Projects_Modules') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_Projects'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_Projects_Projects  WITH CHECK ADD  CONSTRAINT FK_{objectQualifier}Connect_Projects_Projects_Modules FOREIGN KEY([ModuleId])
REFERENCES {databaseOwner}{objectQualifier}Modules ([ModuleID])
ON DELETE CASCADE
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_Projects_Projects_Modules') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_Projects'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_Projects_Projects CHECK CONSTRAINT FK_{objectQualifier}Connect_Projects_Projects_Modules
GO

/******* TRIGGERS *******/
/******* VIEWS *******/
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}vw_Connect_Projects_Projects'))
DROP VIEW {databaseOwner}{objectQualifier}vw_Connect_Projects_Projects
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW {databaseOwner}{objectQualifier}vw_Connect_Projects_Projects
AS
SELECT
 p.*,
 pt.TypeDescription,
 pt.ProjectColor,
 uc.DisplayName AS CreatedByUser,
 um.DisplayName AS LastModifiedByUser
FROM {databaseOwner}{objectQualifier}Connect_Projects_Projects p
 INNER JOIN {databaseOwner}{objectQualifier}Connect_Projects_ProjectTypes pt ON p.ProjectType=pt.ProjectTypeId
 LEFT JOIN {databaseOwner}{objectQualifier}Users uc ON uc.UserID = p.CreatedByUserID
 LEFT JOIN {databaseOwner}{objectQualifier}Users um ON um.UserID = p.LastModifiedByUserID
GO

/******* FUNCTIONS *******/
/******* SPROCS *******/

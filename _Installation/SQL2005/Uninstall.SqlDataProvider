/******* DATA *******/
DELETE FROM {databaseOwner}{objectQualifier}CoreMessaging_NotificationTypes
WHERE Name='Connect_Projects_Project_Published'
GO

/******* SPROCS *******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_GetProjectTypeSelectionList') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_Projects_GetProjectTypeSelectionList
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_ResetTagTotals') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_Projects_ResetTagTotals
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_SetProjectTags') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_Projects_SetProjectTags
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_SetProjectTypes') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_Projects_SetProjectTypes
GO

/******* VIEWS *******/
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}vw_Connect_Projects_Projects'))
DROP VIEW {databaseOwner}{objectQualifier}vw_Connect_Projects_Projects
GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}vw_Connect_Projects_ProjectTags'))
DROP VIEW {databaseOwner}{objectQualifier}vw_Connect_Projects_ProjectTags
GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}vw_Connect_Projects_ProjectTypes'))
DROP VIEW {databaseOwner}{objectQualifier}vw_Connect_Projects_ProjectTypes
GO

/******* FUNCTIONS *******/
/******* TRIGGERS *******/
/******* STRUCTURE *******/
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_Projects_Projects_LicenseTypes') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_Projects'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_Projects_Projects DROP CONSTRAINT FK_{objectQualifier}Connect_Projects_Projects_LicenseTypes
GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_Projects_Projects_Modules') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_Projects'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_Projects_Projects DROP CONSTRAINT FK_{objectQualifier}Connect_Projects_Projects_Modules
GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_Projects_ProjectTags_Projects') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_ProjectTags'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_Projects_ProjectTags DROP CONSTRAINT FK_{objectQualifier}Connect_Projects_ProjectTags_Projects
GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_Projects_ProjectTags_Taxonomy_Terms') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_ProjectTags'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_Projects_ProjectTags DROP CONSTRAINT FK_{objectQualifier}Connect_Projects_ProjectTags_Taxonomy_Terms
GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_Projects_ProjectTypes_Projects') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_ProjectTypes'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_Projects_ProjectTypes DROP CONSTRAINT FK_{objectQualifier}Connect_Projects_ProjectTypes_Projects
GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_Projects_ProjectTypes_PTypes') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_ProjectTypes'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_Projects_ProjectTypes DROP CONSTRAINT FK_{objectQualifier}Connect_Projects_ProjectTypes_PTypes
GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_Projects_Urls_Projects') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_Urls'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_Projects_Urls DROP CONSTRAINT FK_{objectQualifier}Connect_Projects_Urls_Projects
GO

/******* TABLES *******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_LicenseTypes') AND type in (N'U'))
DROP TABLE {databaseOwner}{objectQualifier}Connect_Projects_LicenseTypes
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_Projects') AND type in (N'U'))
DROP TABLE {databaseOwner}{objectQualifier}Connect_Projects_Projects
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_ProjectTags') AND type in (N'U'))
DROP TABLE {databaseOwner}{objectQualifier}Connect_Projects_ProjectTags
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_ProjectTypes') AND type in (N'U'))
DROP TABLE {databaseOwner}{objectQualifier}Connect_Projects_ProjectTypes
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_PTypes') AND type in (N'U'))
DROP TABLE {databaseOwner}{objectQualifier}Connect_Projects_PTypes
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_Urls') AND type in (N'U'))
DROP TABLE {databaseOwner}{objectQualifier}Connect_Projects_Urls
GO

-- any scheduled tasks that need to be removed
FROM {databaseOwner}[{objectQualifier}Schedule]
WHERE [TypeFullName] LIKE 'Connect.DNN.Modules.Projects.%'
GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_Projects_Projects_ProjectTypes') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_Projects'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_Projects_Projects DROP CONSTRAINT FK_{objectQualifier}Connect_Projects_Projects_ProjectTypes
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_LicenseTypes') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}{objectQualifier}Connect_Projects_LicenseTypes(
 [LicenseTypeId] [int] IDENTITY(1,1) NOT NULL,
 [TypeDescription] [nvarchar](300) NOT NULL,
 [ProjectColor] [varchar](10) NOT NULL,
 CONSTRAINT PK_{objectQualifier}Connect_Projects_LicenseTypes PRIMARY KEY CLUSTERED 
(
 [LicenseTypeId] ASC
)WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO

SET IDENTITY_INSERT {databaseOwner}{objectQualifier}Connect_Projects_LicenseTypes ON;
INSERT INTO {databaseOwner}{objectQualifier}Connect_Projects_LicenseTypes
 ([LicenseTypeId],[TypeDescription],[ProjectColor])
SELECT
 [ProjectTypeId],[TypeDescription],[ProjectColor]
FROM
 {databaseOwner}{objectQualifier}Connect_Projects_ProjectTypes;
SET IDENTITY_INSERT {databaseOwner}{objectQualifier}Connect_Projects_LicenseTypes OFF;
GO

ALTER TABLE {databaseOwner}{objectQualifier}Connect_Projects_ProjectTypes
DROP COLUMN [ProjectColor]
GO

DELETE FROM {databaseOwner}{objectQualifier}Connect_Projects_ProjectTypes
GO

DBCC CHECKIDENT ('{databaseOwner}{objectQualifier}Connect_Projects_ProjectTypes', RESEED, 1)
GO
INSERT INTO {databaseOwner}{objectQualifier}Connect_Projects_ProjectTypes ([TypeDescription]) VALUES ('Module');
INSERT INTO {databaseOwner}{objectQualifier}Connect_Projects_ProjectTypes ([TypeDescription]) VALUES ('Theme');
INSERT INTO {databaseOwner}{objectQualifier}Connect_Projects_ProjectTypes ([TypeDescription]) VALUES ('Idea');
INSERT INTO {databaseOwner}{objectQualifier}Connect_Projects_ProjectTypes ([TypeDescription]) VALUES ('Site');
GO

EXEC sp_rename 'dbo.Connect_Projects_Projects.ProjectType', 'LicenseTypeId', 'COLUMN'
GO

ALTER TABLE {databaseOwner}{objectQualifier}Connect_Projects_Projects
ADD ProjectTypeId INT NULL
GO

UPDATE {databaseOwner}{objectQualifier}Connect_Projects_Projects
SET ProjectTypeId = pt.ProjectTypeId
FROM {databaseOwner}{objectQualifier}Connect_Projects_ProjectTypes pt
 WHERE pt.TypeDescription = 'Module'
GO

ALTER TABLE {databaseOwner}{objectQualifier}Connect_Projects_Projects
ALTER COLUMN ProjectTypeId INT NOT NULL
GO

/******* STRUCTURE *******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_Projects_Projects_LicenseTypes') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_Projects'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_Projects_Projects  WITH CHECK ADD  CONSTRAINT FK_{objectQualifier}Connect_Projects_Projects_LicenseTypes FOREIGN KEY([LicenseTypeId])
REFERENCES {databaseOwner}{objectQualifier}Connect_Projects_LicenseTypes ([LicenseTypeId])
ON DELETE CASCADE
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_Projects_Projects_LicenseTypes') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_Projects'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_Projects_Projects CHECK CONSTRAINT FK_{objectQualifier}Connect_Projects_Projects_LicenseTypes
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_Projects_Projects_ProjectTypes') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_Projects'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_Projects_Projects  WITH CHECK ADD  CONSTRAINT FK_{objectQualifier}Connect_Projects_Projects_ProjectTypes FOREIGN KEY([ProjectTypeId])
REFERENCES {databaseOwner}{objectQualifier}Connect_Projects_ProjectTypes ([ProjectTypeId])
ON DELETE CASCADE
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_Projects_Projects_ProjectTypes') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Projects_Projects'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_Projects_Projects CHECK CONSTRAINT FK_{objectQualifier}Connect_Projects_Projects_ProjectTypes
GO

/******* VIEWS *******/
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}vw_Connect_Projects_Projects'))
DROP VIEW {databaseOwner}{objectQualifier}vw_Connect_Projects_Projects
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW {databaseOwner}{objectQualifier}vw_Connect_Projects_Projects
AS
SELECT
 p.*,
 pt.TypeDescription ProjectType,
 lt.TypeDescription LicenseType,
 lt.ProjectColor,
 uc.DisplayName AS CreatedByUser,
 um.DisplayName AS LastModifiedByUser
FROM {databaseOwner}{objectQualifier}Connect_Projects_Projects p
 INNER JOIN {databaseOwner}{objectQualifier}Connect_Projects_ProjectTypes pt ON p.ProjectTypeId=pt.ProjectTypeId
 INNER JOIN {databaseOwner}{objectQualifier}Connect_Projects_LicenseTypes lt ON p.LicenseTypeId=lt.LicenseTypeId
 LEFT JOIN {databaseOwner}{objectQualifier}Users uc ON uc.UserID = p.CreatedByUserID
 LEFT JOIN {databaseOwner}{objectQualifier}Users um ON um.UserID = p.LastModifiedByUserID
GO


